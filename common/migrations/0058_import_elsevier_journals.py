# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-12-06 19:45
from __future__ import unicode_literals

import json
import io

from django.db import migrations
from common.models import Journal

import logging
logger = logging.getLogger('django')

ELSEVIER_JOURNALS = 'cos/static/ElsevierJournals.json'

def add_elsevier_journals(*args, **kwargs):

    elsevier_journals = json.load(io.open(ELSEVIER_JOURNALS, 'r', encoding='utf-8-sig'))

    for entry in elsevier_journals:
        journal, created = Journal.objects.get_or_create(
            title = entry['title']
        )

        if created:
            journal.publisher = entry.get('publisher', 'Elsevier')

        journal.is_preregistered_journal = True
        journal.is_top_journal = True

        journal.save()

        logger.info('The journal {} has been successfully created, and marked for prereg and top.'.format(entry['title']))

    logger.info('{} Journals successfully imported!'.format(len(elsevier_journals)))

def remove_elsevier_journals(*args, **kwargs):

    elsevier_journals = json.load(io.open(ELSEVIER_JOURNALS, 'r', encoding='utf-8-sig'))

    for entry in elsevier_journals:
        try:
            journal_to_remove = Journal.objects.get(
                title = entry['title'],
                publisher = entry.get('publisher', 'Elsevier')
            )
            journal_to_remove.delete()
            logger.info('The journal {} has been successfully deleted'.format(entry['title']))
        except Journal.DoesNotExist:
            logger.warn('The journal {} could not be found, so was not deleted'.format(entry['title']))

    logger.info('{} Journals successfully deleted!'.format(len(elsevier_journals)))

class Migration(migrations.Migration):

    dependencies = [
        ('common', '0057_auto_20170823_2048'),
    ]

    operations = [
        migrations.RunPython(add_elsevier_journals, remove_elsevier_journals),
    ]
